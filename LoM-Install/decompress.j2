#!/bin/bash

VERSION={{ LoMVersion }}
if  [[ $# == 1 && "$1" == "-v" ]]; then
    echo ${VERSION}
    exit 0
fi

# Exit immediately if any command fails
set -e

EXTRACT_ONLY=false
OP_INSTALL=false
OP_CLEAN=false
OP_ROLLBACK=false
EXTRACT_DIR=""
RET=0

print_tree() {
  local dir="$1"
  local indent="${2:-}"

  # Extract the basename (directory name)
  local basename="$(basename "$dir")"

  # Print the directory name with proper indentation
  echo "${indent}+-- $basename/"

  # Loop through the files and subdirectories in the given directory
  for file in "$dir"/*; do
    # Extract the basename (file or directory name)
    local file_basename="$(basename "$file")"

    # Check if it's a directory
    if [ -d "$file" ]; then
      # Recursively call the function for the subdirectory with increased indentation
      print_tree "$file" "${indent}|   "
    else
      # Print the file name with proper indentation
      echo "${indent}|   +-- $file_basename"
    fi
  done
}


display_usage() {
    echo "Usage: $0 [-d|--dir EXTRACT_DIR] [-e|--extract-only] [-i|--op-install | -c|--op-clean | -r|--op-rollback] [-h|--help]"
    echo "Options:"
    echo "  -d, --dir EXTRACT_DIR    Specify the directory to extract the archive. It must have permissions for the current user." 
    echo "                            If not specified, default is created at /tmp/selfextract.XXXXXX. 
                                  If specified, but does not exist, it will be created."
    echo "  -e, --extract-only       Only extract the archive and do not install or clean or rollback."
    echo "  -i, --op-install         Install the extracted archive"
    echo "  -c, --op-clean           Clean the installed archive"
    echo "  -r, --op-rollback        Rollback the installed archive"
    echo "  -h, --help               Display this help message"
    echo ""
    echo "Examples:"
    echo "  Extract archive to /tmp/ and install:"
    echo "    $0 --op-install"
    echo "  Extract archive to /home/user/lom/ and install:"
    echo "    $0 --dir /home/user/lom/ --op-install"
    echo "  Extract archive to /tmp/ and clean:"
    echo "    $0 --op-clean"
    echo "  Extract archive to /tmp/ and rollback:"
    echo "    $0 --op-rollback"
    echo "  Extract archive to /tmp/ and do not install:"
    echo "    $0 --extract-only"
    echo "  Display this help message:"
    echo "    $0 --help"
    exit 0
}
# Parse arguments
while (( "$#" )); do
    case "$1" in
        -h|--help)
            display_usage
            ;;
        -d|--dir)
            EXTRACT_DIR="$2"
            if [ -z "$EXTRACT_DIR" ]; then
                echo "ERROR: -d/--dir requires a directory path."
                display_usage
            fi
            shift 2
            ;;
        -e|--extract-only)
            EXTRACT_ONLY=true
            shift
            ;;
        -i|--op-install)
            OP_INSTALL=true
            shift
            ;;
        -c|--op-clean)
            OP_CLEAN=true
            shift
            ;;
        -r|--op-rollback)
            OP_ROLLBACK=true
            shift
            ;;
        *)
            echo "ERROR: Unknown option: $1"
            display_usage
            ;;
    esac
done

# Check if no valid options were provided
if [ "$EXTRACT_ONLY" = false ] && [ "$OP_INSTALL" = false ] && [ "$OP_CLEAN" = false ] && [ "$OP_ROLLBACK" = false ]; then
    echo "WARNING: No valid arguments provided."
    display_usage
fi

# Check if multiple operations are specified
if [[ "$OP_INSTALL" = true && ("$OP_CLEAN" = true || "$OP_ROLLBACK" = true) ]] || \
   [[ "$OP_CLEAN" = true && ("$OP_INSTALL" = true || "$OP_ROLLBACK" = true) ]] || \
   [[ "$OP_ROLLBACK" = true && ("$OP_INSTALL" = true || "$OP_CLEAN" = true) ]]; then
    echo "ERROR: Only one operation can be specified."
    exit 1
fi

# Check if extract-only is specified along with any operation
if [ "$EXTRACT_ONLY" = true ] && [ "$OP_INSTALL" = true -o "$OP_CLEAN" = true -o "$OP_ROLLBACK" = true ]; then
    echo "ERROR: --extract-only cannot be combined with other operations."
    exit 1
fi

echo ""
echo "==========================="
echo "Self-extracting LoM archive"
echo "==========================="
echo ""

# Check and create EXTRACT_DIR if needed
if [ -z "$EXTRACT_DIR" ]; then
    EXTRACT_DIR=$(mktemp -d /tmp/selfextract.XXXXXX) || { echo "Failed to create temporary directory."; exit 1; }
    echo "Created temporary directory '$EXTRACT_DIR'."
else
    if [ ! -d "$EXTRACT_DIR" ]; then
        mkdir -p "$EXTRACT_DIR" || { echo "Failed to create extraction directory."; exit 1; }
        echo "Created directory '$EXTRACT_DIR'."
        echo ""
    fi
fi

echo "EXTRACT_DIR: $EXTRACT_DIR"
echo "EXTRACT_ONLY: $EXTRACT_ONLY"
echo "OP_INSTALL: $OP_INSTALL"
echo "OP_CLEAN: $OP_CLEAN"
echo "OP_ROLLBACK: $OP_ROLLBACK"
echo ""
echo "Extracting archive..."
echo ""

ARCHIVE=$(awk '/^__ARCHIVE_BELOW__/ {print NR + 1; exit 0; }' $0)
tail -n+$ARCHIVE $0 | tar xzv --no-overwrite-dir -C "$EXTRACT_DIR"

# Check the exit code of tar
if [ $? -eq 0 ]; then
    echo "Extraction completed successfully."
else
    echo "Extraction encountered an error (Exit code: $?)."
    exit 1
fi

# Print files extracted from the archive
echo "SUCCESS: Extracted archive to '$EXTRACT_DIR'."
echo "Files extracted:"
echo ""
print_tree $EXTRACT_DIR ""
echo ""

# Check if the user wants to install, clean or rollback
if [ "$EXTRACT_ONLY" = false ]; then
    if [ "$OP_INSTALL" = true ]; then
        echo "Installation started at $(date)"
        CDIR=`pwd`
        cd $EXTRACT_DIR
        ./install/LoM-install.sh -i
        RET=$?
        cd $CDIR
        if [[ ${RET} == 0 ]]; then
            echo "Install succeeded"
        else
            echo "Install failed with ${RET}"
        fi
    elif [ "$OP_CLEAN" = true ]; then
        echo "Cleaning started at $(date)"
        CDIR=`pwd`
        cd $EXTRACT_DIR
        ./install/LoM-install.sh -c
        RET=$?
        cd $CDIR
        if [[ ${RET} == 0 ]]; then
            echo "Clean succeeded"
        else
            echo "Clean failed with ${RET}"
        fi
    elif [ "$OP_ROLLBACK" = true ]; then
        echo "Rollback started at $(date)"
        CDIR=`pwd`
        cd $EXTRACT_DIR
        ./install/LoM-install.sh -r
        RET=$?
        cd $CDIR
        if [[ ${RET} == 0 ]]; then
            echo "Rollback succeeded"
        else
            echo "Rollback failed with ${RET}"
        fi
    else
        echo "ERROR: No operation specified."
        exit 1
    fi
fi

exit ${RET}

__ARCHIVE_BELOW__
